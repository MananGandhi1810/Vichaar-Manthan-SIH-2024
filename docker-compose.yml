services:
    express:
        build: ./express
        restart: unless-stopped
        ports:
            - 3000:3000/tcp
        volumes:
            - ./.env:/app/.env
            # - /path/to/ssl/fullchain.pem:/usr/src/app/ssl/fullchain.pem
            # - /path/to/ssl/privkey.pem:/usr/src/app/ssl/privkey.pem
        environment:
            NODE_ENV: production
        depends_on:
            - mongo
            - kafka
            
    python:
        build: ./python
        restart: unless-stopped
        volumes:
            - ./.env:/app/.env
        depends_on:
            - mongo
            - kafka

    nextjs:
        build: ./nextjs
        restart: unless-stopped
        ports:
            - 80:3000/tcp
        volumes:
            - ./.env:/app/.env
        depends_on:
            - express

    mongo:
        image: mongo:jammy
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo-admin
            MONGO_INITDB_ROOT_PASSWORD: <password>
            SIH_ADMIN_USERNAME: sih-admin
            SIH_ADMIN_PASSWORD: <password>
            MONGO_INITDB_DATABASE: vichaar_manthan_sih_db
        ports:
            - 27017:27017/tcp
        volumes:
            - db-data:/data/db
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    kafka:
        image: apache/kafka:latest
        restart: unless-stopped
        ports:
            - 9092:9092/tcp
        expose:
            - "9093" 
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
            KAFKA_PROCESS_ROLES: controller,broker
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_CREATE_TOPICS: "resume-upload:1:1,feedback-request:1:1"
        volumes:
            - ./kafka-data:/var/lib/kafka/data

volumes:
    db-data:
